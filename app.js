
// –û–±'—î–∫—Ç –∑—ñ –∑–±–æ—Ä–∞–º–∏ –ø–æ—Ä–∞–¥ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –Ω–∞—Å—Ç—Ä–æ—ó–≤
const moodTips = {
    sad: "‚ù§Ô∏è –ü–æ—Ä–∞–¥–∞ –¥–ª—è –°—É–º—É: –î–æ–∑–≤–æ–ª—å—Ç–µ —Å–æ–±—ñ —Å—É–º—É–≤–∞—Ç–∏, –∞–ª–µ –ø–æ—Ç—ñ–º –∑—Ä–æ–±—ñ—Ç—å –º–∞–ª–µ–Ω—å–∫—É, –ø—Ä–∏—î–º–Ω—É –¥–ª—è –≤–∞—Å —Å–ø—Ä–∞–≤—É (–≤–∏–ø–∏–π—Ç–µ –∫–∞–∫–∞–æ, –ø–æ–¥–∏–≤—ñ—Ç—å—Å—è —É–ª—é–±–ª–µ–Ω–∏–π —Ñ—ñ–ª—å–º).",
    happy: "‚òÄÔ∏è –ü–æ—Ä–∞–¥–∞ –¥–ª—è –†–∞–¥–æ—Å—Ç—ñ: –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Å–≤–æ—ó–º —â–∞—Å—Ç—è–º –∑ –∫–∏–º–æ—Å—å —ñ –ø–æ–¥—É–º–∞–π—Ç–µ –ø—Ä–æ —Ç—Ä–∏ —Ä–µ—á—ñ, –∑–∞ —è–∫—ñ –≤–∏ –≤–¥—è—á–Ω—ñ —Å—å–æ–≥–æ–¥–Ω—ñ. –¶–µ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç—å –≤—ñ–¥—á—É—Ç—Ç—è —Ä–∞–¥–æ—Å—Ç—ñ!",
    angry: "üî• –ü–æ—Ä–∞–¥–∞ –¥–ª—è –ó–ª–æ—Å—Ç—ñ: –ó—Ä–æ–±—ñ—Ç—å –≥–ª–∏–±–æ–∫–∏–π –≤–¥–∏—Ö —ñ –ø–∞—É–∑—É. –°–ø—Ä–æ–±—É–π—Ç–µ —Ñ—ñ–∑–∏—á–Ω—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (–ø—Ä–æ–±—ñ–∂–∫–∞, –ø—Ä–∏—Å—ñ–¥–∞–Ω–Ω—è), —â–æ–± –≤–∏–≤—ñ–ª—å–Ω–∏—Ç–∏ –µ–Ω–µ—Ä–≥—ñ—é, –Ω–µ —Ä—É–π–Ω—É—é—á–∏ –Ω—ñ—á–æ–≥–æ.",
    calm: "üßò –ü–æ—Ä–∞–¥–∞ –¥–ª—è –°–ø–æ–∫–æ—é: –ó–Ω–∞–π–¥—ñ—Ç—å —á–∞—Å –¥–ª—è —Ç–∏—à—ñ. –ù–∞–≤—ñ—Ç—å 5 —Ö–≤–∏–ª–∏–Ω –±–µ–∑ –≥–∞–¥–∂–µ—Ç—ñ–≤ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –Ω–µ—Ä–≤–æ–≤—É —Å–∏—Å—Ç–µ–º—É.",
    default: "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –µ–º–æ–¥–∑—ñ, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ä–∞–¥—É –¥–ª—è —Ü—å–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ—é."
};

/**
 * –ü–æ–∫–∞–∑—É—î –ø–æ—Ä–∞–¥—É, –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –æ–±—Ä–∞–Ω–æ–º—É –µ–º–æ–¥–∑—ñ, —Ç–∞ –≤–∏–¥—ñ–ª—è—î –∞–∫—Ç–∏–≤–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç.
 * @param {HTMLElement} element - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ–º–æ–¥–∑—ñ, –Ω–∞ —è–∫–∏–π –∫–ª—ñ–∫–Ω—É–ª–∏.
 */
function showMoodTip(element) {
    const mood = element.getAttribute('data-mood'); // –û—Ç—Ä–∏–º—É—î–º–æ 'sad', 'happy', 'angry', 'calm'
    const tipText = moodTips[mood];
    const displayElement = document.getElementById('tip-display');
    const allOptions = document.querySelectorAll('.mood-option');

    // 1. –ü—Ä–∏–±—Ä–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –∑ —É—Å—ñ—Ö –æ–ø—Ü—ñ–π
    allOptions.forEach(option => option.classList.remove('active'));

    // 2. –î–æ–¥–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –¥–æ –∫–ª—ñ–∫–Ω—É—Ç–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
    element.classList.add('active');

    // 3. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –ø–æ—Ä–∞–¥—É –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
    if (tipText) {
        displayElement.style.opacity = '0'; // –î–ª—è –µ—Ñ–µ–∫—Ç—É –∑–Ω–∏–∫–Ω–µ–Ω–Ω—è/–ø–æ—è–≤–∏

        setTimeout(() => {
            displayElement.textContent = tipText;
            displayElement.style.opacity = '1';
        }, 150); // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
    } else {
        displayElement.textContent = moodTips.default;
        displayElement.style.opacity = '1';
    }
}

// =======================================================
// JAV–ê–°RIP–¢ –õ–û–ì–Ü–ö–ê –°–õ–ê–ô–î–ï–†–ê
// =======================================================

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–∏—Ö
const slider = document.getElementById('slider');
const slides = Array.from(slider.children);
const maxPage = slides.length - 1; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —ñ–Ω–¥–µ–∫—Å —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (2)

// –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏
const dots = Array.from(document.getElementById('pagination').children);
const SWIPE_THRESHOLD = 80; // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –≤—ñ–¥—Å—Ç–∞–Ω—å –¥–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ —Å–≤–∞–π–ø—É (–ø—ñ–∫—Å–µ–ª—ñ–≤)

let currentPage = 0;
let startX = 0;
let isDragging = false;
let currentTranslate = 0;
let slideWidth = 0; // –®–∏—Ä–∏–Ω–∞ –æ–¥–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞
const mobileFrame = document.getElementById('mobile-frame');

/**
 * –í–∏–∑–Ω–∞—á–∞—î —à–∏—Ä–∏–Ω—É —Å–ª–∞–π–¥–∞, —è–∫–∞ –¥–æ—Ä—ñ–≤–Ω—é—î —à–∏—Ä–∏–Ω—ñ –º–æ–±—ñ–ª—å–Ω–æ–≥–æ —Ñ—Ä–µ–π–º—É.
 */
function getSlideWidth() {
    slideWidth = mobileFrame.clientWidth;
}

/**
 * –û–Ω–æ–≤–ª—é—î –≤–∏–≥–ª—è–¥ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ (–∫—Ä–∞–ø–æ–∫).
 */
function updateDots() {
    dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentPage);
    });
}

/**
 * –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–ª–∞–π–¥–µ—Ä –¥–æ –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é –∞–±–æ –±–µ–∑.
 */
function snapToPage(animate = true) {
    getSlideWidth(); // –û–Ω–æ–≤–ª—é—î–º–æ —à–∏—Ä–∏–Ω—É –ø–µ—Ä–µ–¥ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º
    currentTranslate = -currentPage * slideWidth;

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è/–∑–Ω—è—Ç—Ç—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
    slider.style.transition = animate ? 'transform 0.5s ease-out' : 'none';

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó –ø–æ–∑–∏—Ü—ñ—ó
    slider.style.transform = `translateX(${currentTranslate}px)`;
    updateDots();
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ—á–∞—Ç–∫—É –≤–∑–∞—î–º–æ–¥—ñ—ó (–º–∏—à–∞ –∞–±–æ –¥–æ—Ç–∏–∫).
 */
function handleStart(event) {
    // –Ø–∫—â–æ –≤–∑–∞—î–º–æ–¥—ñ—è –ø–æ—á–∞–ª–∞—Å—è –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤–≤–æ–¥—É ‚Äî –Ω–µ —ñ–Ω—ñ—Ü—ñ—é—î–º–æ —Å–≤–∞–π–ø
    if (event.target && event.target.closest && event.target.closest('textarea, input, button, select, [contenteditable]')) {
        return;
    }
    // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—é –∑–æ–±—Ä–∞–∂–µ–Ω—å, —è–∫—â–æ —Ü–µ desktop
    if (event.type === 'mousedown') {
        event.preventDefault();
    }

    isDragging = true;
    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É –ø–æ–∑–∏—Ü—ñ—é X
    startX = event.touches ? event.touches[0].clientX : event.clientX;
    // –í–∏–º–∏–∫–∞—î–º–æ CSS-–∞–Ω—ñ–º–∞—Ü—ñ—é –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
    slider.style.transition = 'none';

    // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ—á–Ω–µ –ø–æ—Ç–æ—á–Ω–µ –∑–º—ñ—â–µ–Ω–Ω—è
    const transformMatch = slider.style.transform.match(/translateX\(([-.\d]+)px\)/);
    if (transformMatch) {
        currentTranslate = parseFloat(transformMatch[1]);
    } else {
        // –Ø–∫—â–æ transform —â–µ –Ω–µ –±—É–ª–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ (–ø–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏)
        currentTranslate = -currentPage * slideWidth;
    }
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è (–º–∏—à–∞ –∞–±–æ –¥–æ—Ç–∏–∫).
 */
function handleMove(event) {
    if (!isDragging) return;

    const currentX = event.touches ? event.touches[0].clientX : event.clientX;
    const diffX = currentX - startX;

    getSlideWidth();

    const maxTranslate = -maxPage * slideWidth;

    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ω–æ–≤–æ–≥–æ –∑–º—ñ—â–µ–Ω–Ω—è
    let newTranslate = currentTranslate + diffX;

    // –û–±–º–µ–∂–µ–Ω–Ω—è, —â–æ–± —Å–ª–∞–π–¥–µ—Ä –Ω–µ –≤–∏—Ö–æ–¥–∏–≤ –∑–∞ –º–µ–∂—ñ
    if (newTranslate > 0) {
        // –ü–µ—Ä—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ - –ø—Ä—É–∂–Ω–∏–π –µ—Ñ–µ–∫—Ç
        newTranslate = diffX * 0.2;
    } else if (newTranslate < maxTranslate) {
        // –û—Å—Ç–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ - –∂–æ—Ä—Å—Ç–∫–µ –æ–±–º–µ–∂–µ–Ω–Ω—è
        newTranslate = maxTranslate;
    }

    slider.style.transform = `translateX(${newTranslate}px)`;

    // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–º—É —Å–∫—Ä–æ–ª—É
    if (event.touches && Math.abs(diffX) > 10) {
        event.preventDefault();
    }
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –≤–∑–∞—î–º–æ–¥—ñ—ó (–º–∏—à–∞ –∞–±–æ –¥–æ—Ç–∏–∫).
 */
function handleEnd(event) {
    if (!isDragging) return;
    isDragging = false;

    getSlideWidth();

    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ changedTouches –¥–ª—è touch, clientX –¥–ª—è mouse
    const endX = event.changedTouches ? event.changedTouches[0].clientX : event.clientX;
    const diffX = endX - startX;

    let newPage = currentPage;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤—ñ–¥–±—É–≤—Å—è —Å–≤–∞–π–ø –∑–∞ –ø–æ—Ä—ñ–≥ —Ç–∞ —á–∏ –Ω–µ –∑–Ω–∞—Ö–æ–¥–∏–º–æ—Å—è –Ω–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    if (Math.abs(diffX) > SWIPE_THRESHOLD) {
        if (diffX < 0 && currentPage < maxPage) {
            // –°–≤–∞–π–ø –≤–ª—ñ–≤–æ (–Ω–∞—Å—Ç—É–ø–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞), —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ –Ω–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π
            newPage = currentPage + 1;
        } else if (diffX > 0) {
            // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ (–ø–æ–ø–µ—Ä–µ–¥–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞)
            newPage = Math.max(0, currentPage - 1);
        }
    }

    currentPage = newPage;

    // –ó–∞—Ñ—ñ–∫—Å—É–≤–∞—Ç–∏ –ø–æ–∑–∏—Ü—ñ—é –Ω–∞ –Ω–æ–≤—ñ–π/–ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
    snapToPage();
}

// –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, —â–æ –ø—Ä–∏–π–º–∞—î —Å–≤–∞–π–ø–∏
const touchElement = document.getElementById('mobile-frame');

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π —Å–ª–∞–π–¥–µ—Ä–∞.
 */
function initSlider() {
    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è Touch (–ú–æ–±—ñ–ª—å–Ω—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó)
    touchElement.addEventListener('touchstart', handleStart, { passive: true }); // passive: true, —â–æ–± –Ω–µ –±–ª–æ–∫—É–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π –ø–æ—Ç—ñ–∫
    touchElement.addEventListener('touchmove', handleMove, { passive: false }); // passive: false, –¥–ª—è event.preventDefault()
    touchElement.addEventListener('touchend', handleEnd);

    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è Mouse (–î–µ—Å–∫—Ç–æ–ø)
    touchElement.addEventListener('mousedown', handleStart);
    // –î–æ–¥–∞—î–º–æ –¥–æ –≤—ñ–∫–Ω–∞, —â–æ–± –Ω–µ –æ–±—Ä–∏–≤–∞–≤—Å—è —Å–≤–∞–π–ø, —è–∫—â–æ –º–∏—à–∞ –≤–∏–π—à–ª–∞ –∑–∞ –º–µ–∂—ñ —Ñ—Ä–µ–π–º–∞
    window.addEventListener('mousemove', (e) => {
        if (isDragging) {
            handleMove(e);
        }
    });
    window.addEventListener('mouseup', handleEnd);

    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–ª—ñ–∫—É –Ω–∞ —Ç–æ—á–∫–∏ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
    dots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
            currentPage = index;
            snapToPage();
        });
    });

    // –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ —Ä–æ–∑–º—ñ—Ä—É –≤—ñ–∫–Ω–∞ –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è
    window.addEventListener('resize', () => {
        snapToPage(false); // –ë–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
    });

    // –ü–æ—á–∞—Ç–∫–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    snapToPage(false);
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
window.onload = initSlider;






// –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
function openModal(color) {
    document.getElementById('modal-' + color).style.display = 'block';
}

// –§—É–Ω–∫—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
function closeModal(color) {
    document.getElementById('modal-' + color).style.display = 'none';
}

// –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–∏–º
window.onclick = function (event) {
    // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞
    const modals = document.querySelectorAll('.modal');
    modals.forEach(modal => {
        if (event.target == modal) {
            modal.style.display = 'none';
        }
    });
}
